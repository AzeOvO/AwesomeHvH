# vim: set sts=2 ts=8 sw=2 tw=99 et ft=python:
import os, sys

projectName = 'AwesomeHvH'

# smsdk_ext.cpp will be automatically added later
sourceFiles = [
  'extension.cpp',
]

###############
# Make sure to edit PackageScript, which copies your files to their appropriate locations
# Simple extensions do not need to modify past this point.

project = Extension.HL2Project(builder, projectName + '.ext')

project.sources += sourceFiles

for sdk_name in Extension.sdks:
  sdk = Extension.sdks[sdk_name]
  binary = Extension.HL2Config(project, projectName + '.ext.' + sdk.ext, sdk)

  binary.sources += [
    os.path.join(Extension.sm_root, 'public', 'smsdk_ext.cpp'),

    os.path.join(Extension.sm_root, 'public', 'CDetour', 'detours.cpp'),
    os.path.join(Extension.sm_root, 'public', 'asm', 'asm.c'),
    os.path.join(Extension.sm_root, 'public', 'libudis86', 'decode.c'),
    os.path.join(Extension.sm_root, 'public', 'libudis86', 'itab.c'),
    os.path.join(Extension.sm_root, 'public', 'libudis86', 'syn-att.c'),
    os.path.join(Extension.sm_root, 'public', 'libudis86', 'syn-intel.c'),
    os.path.join(Extension.sm_root, 'public', 'libudis86', 'syn.c'),
    os.path.join(Extension.sm_root, 'public', 'libudis86', 'udis86.c'),
  ]

  binary.compiler.cxxincludes += [
    os.path.join(sdk.path, 'game', 'server'),
    os.path.join(sdk.path)
  ]
  
  if binary.compiler.version >= 1900:
    binary.compiler.linkflags += ['legacy_stdio_definitions.lib']

Extension.extensions = builder.Add(project)
